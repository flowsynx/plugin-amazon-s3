name: Build, create, and release

on:      
  workflow_dispatch:
    inputs:
      rel_version:
        description: 'Release version (examples: 1.9.0-rc.1, 1.9.1)'
        required: true 
        type: string

jobs:
  build:
    runs-on: ubuntu-latest    
    env:
      ARTIFACT_DIR: ./release
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion

    - name: Set version variable
      run: echo "VERSION=${{ inputs.rel_version }}" >> $GITHUB_ENV  # Extract version from the tag
      
    - name: Create Branch
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        branch: 'release-${{ env.VERSION }}'
        sha: '${{ github.event.pull_request.head.sha }}'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release /p:Version='${{ env.VERSION }}' --no-restore

    - name: Test
      run: dotnet test --configuration Release /p:Version='${{ env.VERSION }}' --no-build

    - name: Publish project
      run: dotnet publish -c Release -o ./publish
        
    - name: Zip the output files
      run: |
          mkdir -p "${{github.workspace}}/dist"
          zip -r "${{github.workspace}}/dist/release-${{ env.VERSION }}.zip" ./publish

    - name: Generate SHA256 checksum for the zip file
      run: |
          sha256sum "${{github.workspace}}/dist/release-${{ env.VERSION }}.zip" > "${{github.workspace}}/dist/release-${{ env.VERSION }}.zip.sha256"

    - name: Upload bineries
      uses: actions/upload-artifact@v4
      with:
        name: uploaded-artifacts
        path: "${{github.workspace}}/dist"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: uploaded-artifacts
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}
          name: Amazon S3 Plugin v${{ env.VERSION }}
          artifacts: |
            ./downloaded-artifacts/release-${{ env.VERSION }}.zip
            ./downloaded-artifacts/release-${{ env.VERSION }}.zip.sha256
          body: "This is the v${{ env.VERSION }} release of Amazon S3 Storage for FlowSynx System."
          token: ${{ secrets.GH_TOKEN }}
